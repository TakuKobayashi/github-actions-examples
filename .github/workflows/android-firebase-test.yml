name: Android Debug Build And Firebase Test Lab Run

on:
  push:
    branches:
    - android-build

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        compile-sdk: [35]
        build-tools: [35.0.0]
        commandlinetools-download-url: ['https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip']
        root-project-path: [./Android]
        test-device-model-name: ["Pixel8"]
        test-device-version: [34]
        test-locale: ["ja_JP"]

    steps:
    - uses: actions/checkout@v4
    - name: setup ubuntu
      run: |
        sudo apt-get --quiet update --yes
        sudo apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1
    - uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.FIREBASE_CREDENTIALS_JSON }}'
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'
    - name: gcloud update latest compoments
      run: gcloud components update
    - name: setup JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'microsoft'
        java-version: '17'
    - name: download Android SDK
      working-directory: ${{ matrix.root-project-path }}
      run: |
        wget --quiet --output-document=android-sdk.zip ${{ matrix.commandlinetools-download-url }}
        unzip -d android-sdk-linux android-sdk.zip
        sudo mkdir -p /root/.android
        sudo touch /root/.android/repositories.cfg
        echo y | android-sdk-linux/cmdline-tools/bin/sdkmanager --sdk_root=. "platforms;android-${{ matrix.compile-sdk }}" >/dev/null
        echo y | android-sdk-linux/cmdline-tools/bin/sdkmanager --sdk_root=. "platform-tools" >/dev/null
        echo y | android-sdk-linux/cmdline-tools/bin/sdkmanager --sdk_root=. "build-tools;${{ matrix.build-tools }}" >/dev/null
        export ANDROID_SDK_ROOT=$PWD
        export PATH=$PATH:$PWD/platform-tools/
        chmod +x ./gradlew
        set +o pipefail
        yes | android-sdk-linux/cmdline-tools/bin/sdkmanager --sdk_root=. --licenses
        set -o pipefail
    - name: setup google-services.json
      working-directory: ${{ matrix.root-project-path }}
      env:
        GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
      run: |
        echo "${GOOGLE_SERVICES_JSON}" >> ./app/google-services.json
    - name: Android Debug Apk Build
      working-directory: ${{ matrix.root-project-path }}
      run: ./gradlew assembleDebug
    - name: Android Debug Test Apk Build
      working-directory: ${{ matrix.root-project-path }}
      run: ./gradlew assembleAndroidTest -DtestBuildType=debug
    - name: Set execute project id
      run: gcloud config set project ${{ secrets.FIREBASE_PROJECT_ID }}
    - name: Execute firebase robo test
      working-directory: ${{ matrix.root-project-path }}
      run: gcloud firebase test android run --type robo --app app/build/outputs/apk/debug/app-debug.apk --device "model=${{ matrix.test-device-model-name }},version=${{ matrix.test-device-version }},locale=${{ matrix.test-locale }}"
    - name: Execute firebase instrumentation test
      working-directory: ${{ matrix.root-project-path }}
      run: gcloud firebase test android run --type instrumentation --app app/build/outputs/apk/debug/app-debug.apk --test app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk --device "model=${{ matrix.test-device-model-name }},version=${{ matrix.test-device-version }},locale=${{ matrix.test-locale }}"