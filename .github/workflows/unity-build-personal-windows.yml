name: execute-unity-annothor-os-build
on:
  push:
    branches:
    - feature/research-unity-build
jobs:
  build:
    name: build
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        unity-editor-version: [2021.3.4f1]
        unity-license-version: [2021.x]
        node-version: [14.x]
        root-project-path: [Unity]
        targetPlatform:
          #- StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows # Build a Windows standalone.
          #- StandaloneWindows64 # Build a Windows 64-bit standalone.
          #- StandaloneLinux64 # Build a Linux 64-bit standalone.
          #- iOS # Build an iOS player.
          #- Android # Build an Android .apk standalone app.
          #- WebGL # WebGL.
    steps:
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # Checkout
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Cache
      - uses: actions/cache@v3
        id: cache-unity-library
        with:
          key: ${{ runner.os }}-Unity-Library-${{ matrix.targetPlatform }}
          path: |
            ${{ matrix.root-project-path }}/Library
          restore-keys: |
            ${{ runner.os }}-Unity-Library-

      # Cache
      - uses: actions/cache@v3
        id: cache-unity-license
        with:
          key: ${{ runner.os }}-Unity-License-${{ matrix.unity-license-version }}
          path: |
            ${{ matrix.root-project-path }}/Unity_v${{ matrix.unity-license-version }}.ulf
            ${{ matrix.root-project-path }}/Unity_v${{ matrix.unity-editor-version }}.alf
      - name: Setup Unity
        uses: kuler90/setup-unity@v1.0.8
        with:
          unity-version: ${{ matrix.unity-editor-version }}
          project-path: ${{ matrix.root-project-path }}
      - name: generate alf file
        working-directory: ${{ matrix.root-project-path }}
        run: C:\Program Files\Unity\Hub\Editor\${{ matrix.unity-editor-version }}\Editor\Unity.exe -batchmode -createManualActivationFile -logfile
      - name: check
        working-directory: ${{ matrix.root-project-path }}
        run: dir
      # Activate from alf File
      - name: Install node package, `unity-activate`
        run: npm install -g unity-activate
      - name: Activate The License
        id: activateLicense
        run: unity-activate -u "${{ secrets.UNITY_EMAIL }}" -p "${{ secrets.UNITY_PASSWORD }}" -k "${{ secrets.UNITY_AUTHENTICATOR_KEY }}" -o ${{ matrix.root-project-path }}/ -s ${{ secrets.UNITY_SERIAL }} "${{ steps.getManualLicenseFile.outputs.filePath }}"
      # Upload Build
      - name: Upload alfFile
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.getManualLicenseFile.outputs.filePath }}
          path: ${{ steps.getManualLicenseFile.outputs.filePath }}

      # Upload Build
      - name: Upload ulfFile
        uses: actions/upload-artifact@v3
        with:
          name: Unity_v${{ matrix.unity-license-version }}.ulf
          path: ${{ matrix.root-project-path }}/Unity_v${{ matrix.unity-license-version }}.ulf

      - name: Read ulf
        id: ulfRead
        uses: juliangruber/read-file-action@v1
        with:
          path: ./Unity_v${{ matrix.unity-license-version }}.ulf

      # Build
      - name: Build
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ steps.ulfRead.outputs.content }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          projectPath: ${{ matrix.root-project-path }}
          unityVersion: ${{ matrix.unity-editor-version }}
          allowDirtyBuild: true

      # Upload Build
      - name: Upload Build
        uses: actions/upload-artifact@v3
        with:
          name: Build-Results
          path: build/